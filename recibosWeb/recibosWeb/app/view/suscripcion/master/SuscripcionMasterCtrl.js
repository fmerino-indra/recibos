Ext.define('recibosWeb.view.suscripcion.master.SuscripcionMasterCtrl', {
    extend: 'Ext.app.ViewController',
    alias : 'controller.suscripcion-master',

    control: {
        'suscripcion_suscripciongrid': {
            beforerender: 'suscripcionLoad'
        }
    },

    /**
     * @autogenerated
     *
     */
    suscripcionLoad: function () {
        var me = this;
        // TODO FMM
        //me.suscripcionSearch();
    },

    suscripcionReset: function () {
        this.lookupReference('suscripcion_suscripcionsearchform').getForm().reset();
    },


    /**
     * @autogenerated
     * Load parameters after the search button has been pressed
     * add parameters to a hashmap, and the last step, launches search
     *
     * @param searchBtn button pressed
     *
     */
    suscripcionSearch: function () {
        var me = this, store, search = me.lookupReference("suscripcion_suscripcionsearchform"),
            params = search.getForm().getValues(), value, filters;

        filters = [
            {
                property: 'filter',
                value   : true
            }
        ];

        store = me.getViewModel().getStore('suscripcions');

        Ext.each(Ext.Object.getKeys(params), function (name) {
            value = params[name];
            if (value !== '' && value !== null) {
                filters[filters.length] = {
                    property: name,
                    value   : value
                };
                console.log('property:' + name + ' value:' + value);
//                recibosWeb.lib.Logger.info('property ' + name + 'value ' + value);
            }
        });

        store.setRemoteFilter(true);
        store.clearFilter(true);
        store.filter(filters, null, true);

        store.loadPage(1, {
            callback: function (records, operation, success) {
                if (!success) {
                    if (operation.getError().code === null) {
                        me.error(operation.getError());
                    }
                } else {
                    //TODO ..
                }
            }
        });
    },

    suscripcionsDataChanged : function (suscripcions) {
        this.getViewModel().set('suscripcionsCount', suscripcions.getCount() > 0 ? suscripcions.getTotalCount() : 0);
    }

});
