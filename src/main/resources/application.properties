# ===============================
# = EMISION
# ===============================
#app.xml.file.dir=@XML_DIR@
app.xml.file.dir=@REC_XML_DIR@
app.xml.file.watch.pending.dir=@REC_XML_DIR@@WATCH_PENDING_DIR@
app.xml.file.watch.processed.dir=@REC_XML_DIR@@WATCH_PROCESSED_DIR@
app.xml.file.watch.error.dir=@REC_XML_DIR@@WATCH_ERROR_DIR@


# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database
spring.datasource.url=jdbc:mysql://@REC_DATASOURCE_DB_HOST@:@REC_DATASOURCE_DB_PORT@/suscrdb

# Username and password
spring.datasource.username=@REC_DATASOURCE_USERNAME@
spring.datasource.password=@REC_DATASOURCE_PASSWORD@

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1


# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = @REC_JPA_SHOW_SQL@

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.EJB3NamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#Log
#logging.level.com=@REC_LOGGING_LEVEL_APP@
#logging.level.com=@REC_LOGGING_LEVEL_ROOT@

logging.level=@REC_LOGGING_LEVEL_ROOT@
logging.level.es.cnc=@REC_LOGGING_LEVEL_APP@
#logging.level.org.springframework.web.servlet.mvc.method.annotation=TRACE
#logging.level.org.springframework.web: DEBUG